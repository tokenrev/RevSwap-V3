"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[125],{19125:function(d,b,a){a.r(b),a.d(b,{WalletLinkConnector:function(){return h}});var c=a(17440);function e(){return(e=Object.assign||function(d){for(var a=1;a<arguments.length;a++){var b=arguments[a];for(var c in b)Object.prototype.hasOwnProperty.call(b,c)&&(d[c]=b[c])}return d}).apply(this,arguments)}function f(a,b){return(f=Object.setPrototypeOf||function(a,b){return a.__proto__=b,a})(a,b)}function g(a){if(void 0===a)throw ReferenceError("this hasn't been initialised - super() hasn't been called");return a}var h=function(d){function c(b){var a,c=b.url,e=b.appName,f=b.appLogoUrl,h=b.darkMode,i=b.supportedChainIds;return(a=d.call(this,{supportedChainIds:i})||this).url=c,a.appName=e,a.appLogoUrl=f,a.darkMode=h||!1,a.handleChainChanged=a.handleChainChanged.bind(g(a)),a.handleAccountsChanged=a.handleAccountsChanged.bind(g(a)),a}h=c,i=d,h.prototype=Object.create(i.prototype),h.prototype.constructor=h,f(h,i);var h,i,b=c.prototype;return b.activate=function(){try{var f=this,c=function(){return Promise.resolve(f.provider.request({method:"eth_requestAccounts"})).then(function(a){var b=a[0];return f.provider.on("chainChanged",f.handleChainChanged),f.provider.on("accountsChanged",f.handleAccountsChanged),{provider:f.provider,account:b}})},b=function(){if(window.ethereum&& !0===window.ethereum.isCoinbaseWallet)f.provider=window.ethereum;else{var b=function(){if(!f.walletLink)return Promise.resolve(Promise.all([a.e(918),a.e(254),a.e(713)]).then(a.bind(a,99254)).then(function(a){var b;return null!=(b=null==a?void 0:a.default)?b:a})).then(function(a){f.walletLink=new a(e({appName:f.appName,darkMode:f.darkMode},f.appLogoUrl?{appLogoUrl:f.appLogoUrl}:{})),f.provider=f.walletLink.makeWeb3Provider(f.url,1)})}();if(b&&b.then)return b.then(function(){})}}();return Promise.resolve(b&&b.then?b.then(c):c(b))}catch(d){return Promise.reject(d)}},b.getProvider=function(){try{var a=this;return Promise.resolve(a.provider)}catch(b){return Promise.reject(b)}},b.getChainId=function(){try{var a=this;return Promise.resolve(a.provider.chainId)}catch(b){return Promise.reject(b)}},b.getAccount=function(){try{var a=this;return Promise.resolve(a.provider.request({method:"eth_requestAccounts"})).then(function(a){return a[0]})}catch(b){return Promise.reject(b)}},b.deactivate=function(){this.provider.removeListener("chainChanged",this.handleChainChanged),this.provider.removeListener("accountsChanged",this.handleAccountsChanged)},b.close=function(){try{var a=this;return a.provider.close(),a.emitDeactivate(),Promise.resolve()}catch(b){return Promise.reject(b)}},b.handleChainChanged=function(a){this.emitUpdate({chainId:a})},b.handleAccountsChanged=function(a){this.emitUpdate({account:a[0]})},c}(c.AbstractConnector)}}])